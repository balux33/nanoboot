# set all GPIOs to input, except for the CPU LEDs. pull these low to
# enable them. also pull GPIO12 low to allow Linux-initiated reboots.
gpio.010 = 1000efff
gpio.014 = 0000ffff
gpio.018 = 0000ffff
gpio.01c = 1100eeff
# set clock frequencies
clock.000 = 2c410700 # MIPS 250MHz
clock.014 = 24590600 # DRAM 200MHz
# enable clocks
clock.100 = 00000003 # MIPS
clock.200 = 00000003
clock.20c = 00000002 # DCSN
clock.210 = 00000002
clock.214 = 00000004
clock.218 = 00000004
clock.714 = 00000003 # IÂ²C
clock.718 = 00000003
clock.71c = 00000003 # UARTs
clock.720 = 00000003
# setup PCI interface
pci-xio.050 = 20000000 # DRAM base
pci-xio.054 = 1be00000 # MMIO base
pci-xio.058 = 10000000 # XIO base
pci-xio.010 = 01da0f83 # PCI setup
pci-xio.014 = 00000245 # PCI control
pci-xio.044 = 00000006 # PCI config command (?)
pci-xio.06c = 00591131 # PCI vendor & device ID
# setup XIO interface
pci-xio.814 = 00494817 # flash aperture
# set flash command. unnecessary for nanoboot, but needed by U-Boot
# flash autodetection when nanoboot doesn't load it from flash: U-Boot
# reads the register, and if nanoboot never set it, U-Boot will see
# wrong data and detect an incorrect flash...
pci-xio.830 = 00370000 # flash command: read lower half-page
# enable DCSN to PMAN bridge
global2.208 = 00000001
global2.204 = 10000000
# DRAM config
dram.004 = 00000003 # control
dram.010 = 00000000 # rank config
dram.014 = 07ffffff
dram.018 = 0fffffff
dram.048 = 00000003
dram.0c0 = 0000000d
dram.0c4 = 0000000a
dram.0d0 = 0000000d
dram.0d4 = 0000000a
dram.080 = 00000033 # extended mode contol
dram.084 = 00000000
dram.088 = 0000000a
dram.100 = 00030003 # timing
dram.104 = 0000000b
dram.108 = 00000002
dram.10c = 00000003
dram.110 = 00000003
dram.114 = 00000008
dram.118 = deadabba # unimplemented register; batch writing saves 4 bytes
dram.11c = 00000002
dram.120 = 0000000e
dram.124 = 00000002
dram.128 = 00000008
dram.12c = 00000618
# warm-start the DRAM controller (has to be done like this)
dram.000 = 00002000 then 00000001
# setup UART for nanoboot
uart1.000 = 01000000 # 8-bit
uart1.008 = 00000005 # 38400 baud
gpio.004 = 00000005 # assign pins to UART
# copy nanoboot to memory and execute it
load 04010000 "boot.bin"
global2.010 = 04010001 # MIPS entry point
reset.000 = 0000000a # release reset
halt
